namespace MovingAverage.Tests


open MovingAverage
open NUnit.Framework
open System

module Tests = 
    [<Test>]
    let ``moving average is calculated correctly``()= 
        let setting = {Days=5}
        let data = [12.339922252735;35.186296629341;95.292111788081;84.018046588645;34.32143033078;37.27334486799;63.712595042639;79.326456874295;74.029230751111;75.527898631304;48.93780569869;68.125623373839;48.197522409818;61.342484125096;52.286945697519;23.150875294651;66.079070661719;18.448031580284;67.835962934343;9.3195287442391;11.049062279542;46.004280130847;69.854383896503;43.35489350341;66.147457293769;58.186650716321;39.340987391463;76.072255578857;1.5284595240506;60.984723660156;25.195048992147;48.478295278493;52.917757802139;73.517260257861;47.800797921978;23.450247489126;14.336873259087;16.847704009548;48.991901692931;40.143029217675;98.070739278137;53.789974774136;57.375238232489;42.362429547292;70.308692570454;69.430483966801;90.459674865221;4.6161189622321;15.861263171705;88.210328179044;77.752188007698;87.625425732054;11.703113675911;87.071035340461;43.822989628568;76.586970617337;90.357198412696;83.094843145038;20.102589528124;25.411015344975;43.311402368504;27.059978586184;29.218794050263;92.819334437987;63.329148273137;37.230046755741;3.9273465838876;4.908194374716;98.650412825705;12.378900244077;73.785760167886;46.092746190304;25.923467772512;83.985888147254;19.095205893319;95.731524801688;43.812219683459;83.899843791453;11.676266331075;4.9335316526394;17.328835456785;98.345560899165;86.370645967019;12.154637651124;72.394004250594;62.861351478315;35.391929331884;66.456324017819;65.883405387347;42.536817150906;54.295928188272;16.233403294456;27.574751711252;53.22253592183;40.505366905828;6.6211166668782;79.835720578598;56.995686076579;13.471882397063;82.575409677613;]
        let calculator = new SimpleMovingAverageCalculator(setting)
        let round (d:int) (x:float) = Math.Round(x, d)
        let expected =[52.23156152;57.21824604;62.92350572;59.73037474;57.73261157;65.97390523;68.3067974;69.18940307;62.96361617;60.42626685;55.77807626;50.62069018;50.21137964;44.26148147;45.56017723;36.96669384;34.54633124;30.53137313;40.8126436;35.91642971;47.28201542;56.70953311;55.37687456;56.6204489;48.2551621;47.22261537;40.62429503;42.45175661;37.82085705;52.2186172;49.58183205;49.23287175;42.40458735;35.19057659;30.28550487;28.75395113;43.67804949;51.56866979;59.67417664;58.34828221;64.38141488;58.65336382;65.98730384;55.43547998;50.13524671;53.71557383;55.37991464;54.81306481;56.23046375;70.47241819;61.59495048;61.361907;61.90826153;76.18660743;62.79291827;59.11052341;52.45540976;39.79596579;29.02075598;43.56410496;51.14773154;49.93146042;45.30493402;40.44281409;41.60902976;31.41898016;38.73012284;47.16320276;51.36625744;48.4333525;49.77661363;54.16576656;53.70966126;65.30493646;50.8430121;48.01067725;32.33013938;43.23680763;43.73096806;43.82664233;57.31873684;66.42524005;53.83451374;49.85164935;60.59740289;54.62596547;52.91288082;49.08117561;41.30486115;38.77268725;38.3663972;28.8314349;41.55189836;47.43608523;39.48595452;47.89996308;]
                       |>Seq.map (round 2)
                       |> Seq.toArray
        let actual = calculator.Calculate(data)
                    |> Seq.map (round 2)
                    |>Seq.toArray
        Assert.That(actual,Is.EquivalentTo(expected))
